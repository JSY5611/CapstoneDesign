name: Java CI with Gradle

# 동작 조건 설정 : develop 브랜치에 develop 혹은 pull request가 발생할 경우 동작한다.
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]


permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # 1. Java 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        submodules: recursive
        token: ${{ secrets.ACTION_TOKEN }}
        java-version: '11'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      working-directory: ./BackEnd/campusin
      run: |
        chmod +x ./gradlew  # Gradle Wrapper에 실행 권한을 부여
        ./gradlew clean bootJar
        
        
    # 3. Docker 이미지 빌드
    - name: docker image build
      working-directory: ./BackEnd/campusin
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      working-directory: ./BackEnd/campusin
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo
